# Notes, Features, Bugs & Improvements #


# To-Do:
# ---------------------------------------- #

Update README

Add postgresql to collect user data and playlist data when user logs in:
- user_id, user_name, user_playlists
- Create  a data schema for users & for playlists
- This app will also be using multiple databases through Prisma (Relational & NoSQL) 

Use async awaits instead of promises

Set standard screen width for the application:
- So that the width doesn't change when objects are clicked/rendered
- This will also mean resizing some text elements

Add external playlist link to each playlist

Add user name and playlist title to each playlist tile on the recommendations page

Disable y-scroll on web page

Fix screen breakpoints for the application

# Notes:
# ---------------------------------------- #

How are we going to deploy the recommender model so that...
- we can send requests from the app through an API
- we can share access tokens with the recommender
- when user x logs in, the recommender suggests playlists for user x

Can I cache the playlists that have been rendered in the app?
- So that we don't have to render them again whenever the page is refreshed.
- How are we managing states in this app? via Recoil

Our current recommendation model uses content-based filtering:
- Content-based filtering is a technique for finding similar items in a dataset
- Thaker's model uses a playlist vector to summarize the songs in a playlist
- We should update the model to create a playlist vector for each playlist and use this to find similar playlists
- How can we connect our model to a postgresql database?

How are we going to keep track of the user's recommendations and liked playlists?

# New Features:
# ---------------------------------------- #

Include BPM for songs because we want this app to be helpful to DJs as well

Add Apple Music Integration + Authentication

Allow users to convert and save playlists to their library (Apple Music, Spotify, etc.)

Create user profiles so that:
- Each user can follow other users
- Each user can add playlists to their library (i.e, on Everyone's Radio)

# Resources:
# ---------------------------------------- #

How to Build a Full Stack App w/ Next.js, PostgreSQL & Prisma
- https://vercel.com/guides/nextjs-prisma-postgres
- https://github.com/prisma/blogr-nextjs-prisma/tree/final

PostgreSQL + Heroku Account:
- https://id.heroku.com/login

How to Build a Web Scraper Microservice:
- https://medium.com/hackernoon/microservice-series-scraper-ee970df3e81f
- https://www.youtube.com/watch?v=DxET43rUkig&ab_channel=RCCoding






So help me God.
